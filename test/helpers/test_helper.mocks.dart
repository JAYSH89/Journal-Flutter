// Mocks generated by Mockito 5.4.4 from annotations
// in journal/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:journal/food/data/datasource/food_data_source.dart' as _i6;
import 'package:journal/food/domain/models/food.dart' as _i2;
import 'package:journal/food/domain/repository/food_repository.dart' as _i12;
import 'package:journal/journal/data/datasource/journal_data_source.dart'
    as _i7;
import 'package:journal/journal/domain/models/journal_entry.dart' as _i3;
import 'package:journal/profile/data/datasource/user_details_data_source.dart'
    as _i8;
import 'package:journal/profile/data/datasource/weight_measurement_data_source.dart'
    as _i10;
import 'package:journal/profile/domain/models/user_detail.dart' as _i4;
import 'package:journal/profile/domain/models/weight_measurement.dart' as _i5;
import 'package:journal/profile/domain/repository/profile_repository.dart'
    as _i11;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFood_0 extends _i1.SmartFake implements _i2.Food {
  _FakeFood_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJournalEntry_1 extends _i1.SmartFake implements _i3.JournalEntry {
  _FakeJournalEntry_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserDetail_2 extends _i1.SmartFake implements _i4.UserDetail {
  _FakeUserDetail_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWeightMeasurement_3 extends _i1.SmartFake
    implements _i5.WeightMeasurement {
  _FakeWeightMeasurement_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FoodDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFoodDataSource extends _i1.Mock implements _i6.FoodDataSource {
  MockFoodDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i2.Food> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: <_i2.Food>[],
      ) as List<_i2.Food>);

  @override
  _i2.Food? getFoodById(String? id) => (super.noSuchMethod(Invocation.method(
        #getFoodById,
        [id],
      )) as _i2.Food?);

  @override
  List<_i2.Food> searchFoodByName(String? name) => (super.noSuchMethod(
        Invocation.method(
          #searchFoodByName,
          [name],
        ),
        returnValue: <_i2.Food>[],
      ) as List<_i2.Food>);

  @override
  _i2.Food updateFood(
    String? id,
    _i2.Food? food,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFood,
          [
            id,
            food,
          ],
        ),
        returnValue: _FakeFood_0(
          this,
          Invocation.method(
            #updateFood,
            [
              id,
              food,
            ],
          ),
        ),
      ) as _i2.Food);

  @override
  _i2.Food saveFood(_i2.Food? food) => (super.noSuchMethod(
        Invocation.method(
          #saveFood,
          [food],
        ),
        returnValue: _FakeFood_0(
          this,
          Invocation.method(
            #saveFood,
            [food],
          ),
        ),
      ) as _i2.Food);

  @override
  dynamic deleteFood(String? id) => super.noSuchMethod(Invocation.method(
        #deleteFood,
        [id],
      ));
}

/// A class which mocks [JournalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockJournalDataSource extends _i1.Mock implements _i7.JournalDataSource {
  MockJournalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.JournalEntry> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: <_i3.JournalEntry>[],
      ) as List<_i3.JournalEntry>);

  @override
  List<_i3.JournalEntry> getBetween(
    DateTime? start,
    DateTime? end,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBetween,
          [
            start,
            end,
          ],
        ),
        returnValue: <_i3.JournalEntry>[],
      ) as List<_i3.JournalEntry>);

  @override
  _i3.JournalEntry update(
    String? id,
    _i3.JournalEntry? entry,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [
            id,
            entry,
          ],
        ),
        returnValue: _FakeJournalEntry_1(
          this,
          Invocation.method(
            #update,
            [
              id,
              entry,
            ],
          ),
        ),
      ) as _i3.JournalEntry);

  @override
  _i3.JournalEntry save(_i3.JournalEntry? entry) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [entry],
        ),
        returnValue: _FakeJournalEntry_1(
          this,
          Invocation.method(
            #save,
            [entry],
          ),
        ),
      ) as _i3.JournalEntry);

  @override
  dynamic delete(String? id) => super.noSuchMethod(Invocation.method(
        #delete,
        [id],
      ));
}

/// A class which mocks [UserDetailsDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserDetailsDataSource extends _i1.Mock
    implements _i8.UserDetailsDataSource {
  MockUserDetailsDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.UserDetail getUserDetail() => (super.noSuchMethod(
        Invocation.method(
          #getUserDetail,
          [],
        ),
        returnValue: _FakeUserDetail_2(
          this,
          Invocation.method(
            #getUserDetail,
            [],
          ),
        ),
      ) as _i4.UserDetail);

  @override
  _i9.Future<_i4.UserDetail> saveUserDetail(_i4.UserDetail? userDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserDetail,
          [userDetail],
        ),
        returnValue: _i9.Future<_i4.UserDetail>.value(_FakeUserDetail_2(
          this,
          Invocation.method(
            #saveUserDetail,
            [userDetail],
          ),
        )),
      ) as _i9.Future<_i4.UserDetail>);
}

/// A class which mocks [WeightMeasurementDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeightMeasurementDataSource extends _i1.Mock
    implements _i10.WeightMeasurementDataSource {
  MockWeightMeasurementDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i5.WeightMeasurement> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: <_i5.WeightMeasurement>[],
      ) as List<_i5.WeightMeasurement>);

  @override
  _i5.WeightMeasurement save(_i5.WeightMeasurement? measurement) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [measurement],
        ),
        returnValue: _FakeWeightMeasurement_3(
          this,
          Invocation.method(
            #save,
            [measurement],
          ),
        ),
      ) as _i5.WeightMeasurement);

  @override
  dynamic delete(String? id) => super.noSuchMethod(Invocation.method(
        #delete,
        [id],
      ));
}

/// A class which mocks [ProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRepository extends _i1.Mock implements _i11.ProfileRepository {
  MockProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.UserDetail getUserDetails() => (super.noSuchMethod(
        Invocation.method(
          #getUserDetails,
          [],
        ),
        returnValue: _FakeUserDetail_2(
          this,
          Invocation.method(
            #getUserDetails,
            [],
          ),
        ),
      ) as _i4.UserDetail);

  @override
  _i9.Future<_i4.UserDetail> saveUserDetails(_i4.UserDetail? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserDetails,
          [profile],
        ),
        returnValue: _i9.Future<_i4.UserDetail>.value(_FakeUserDetail_2(
          this,
          Invocation.method(
            #saveUserDetails,
            [profile],
          ),
        )),
      ) as _i9.Future<_i4.UserDetail>);

  @override
  List<_i5.WeightMeasurement> getAllWeightMeasurements() => (super.noSuchMethod(
        Invocation.method(
          #getAllWeightMeasurements,
          [],
        ),
        returnValue: <_i5.WeightMeasurement>[],
      ) as List<_i5.WeightMeasurement>);

  @override
  _i5.WeightMeasurement saveWeightMeasurement(
          _i5.WeightMeasurement? measurement) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWeightMeasurement,
          [measurement],
        ),
        returnValue: _FakeWeightMeasurement_3(
          this,
          Invocation.method(
            #saveWeightMeasurement,
            [measurement],
          ),
        ),
      ) as _i5.WeightMeasurement);

  @override
  dynamic deleteWeightMeasurement(String? id) =>
      super.noSuchMethod(Invocation.method(
        #deleteWeightMeasurement,
        [id],
      ));
}

/// A class which mocks [FoodRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFoodRepository extends _i1.Mock implements _i12.FoodRepository {
  MockFoodRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i2.Food> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: <_i2.Food>[],
      ) as List<_i2.Food>);

  @override
  _i2.Food? getFoodById(String? id) => (super.noSuchMethod(Invocation.method(
        #getFoodById,
        [id],
      )) as _i2.Food?);

  @override
  List<_i2.Food> searchFoodByName(String? name) => (super.noSuchMethod(
        Invocation.method(
          #searchFoodByName,
          [name],
        ),
        returnValue: <_i2.Food>[],
      ) as List<_i2.Food>);

  @override
  _i2.Food updateFood(
    String? id,
    _i2.Food? food,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFood,
          [
            id,
            food,
          ],
        ),
        returnValue: _FakeFood_0(
          this,
          Invocation.method(
            #updateFood,
            [
              id,
              food,
            ],
          ),
        ),
      ) as _i2.Food);

  @override
  _i2.Food saveFood(_i2.Food? food) => (super.noSuchMethod(
        Invocation.method(
          #saveFood,
          [food],
        ),
        returnValue: _FakeFood_0(
          this,
          Invocation.method(
            #saveFood,
            [food],
          ),
        ),
      ) as _i2.Food);

  @override
  dynamic deleteFood(String? id) => super.noSuchMethod(Invocation.method(
        #deleteFood,
        [id],
      ));
}
